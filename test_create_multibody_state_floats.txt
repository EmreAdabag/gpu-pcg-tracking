g++ -std=c++11 -I. test_croc.cpp -o overview-urdf $(pkg-config --cflags --libs pinocchio crocoddyl)
In file included from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup.hpp:10,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-algo.hpp:9,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/model.hxx:11,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/model.hpp:595,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/parsers/urdf.hpp:9,
                 from test_croc.cpp:1:
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/special-orthogonal.hpp: In instantiation of ‘static typename Matrix2Like::Scalar pinocchio::SpecialOrthogonalOperationTpl<2, _Scalar, _Options>::log(const Eigen::MatrixBase<OtherDerived>&) [with Matrix2Like = Eigen::Matrix<float, 2, 2>; _Scalar = float; int _Options = 0; typename Matrix2Like::Scalar = float]’:
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/special-orthogonal.hpp:142:55:   required from ‘static void pinocchio::SpecialOrthogonalOperationTpl<2, _Scalar, _Options>::difference_impl(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with ConfigL_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; ConfigR_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; Tangent_t = Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 1, 1, false>; _Scalar = float; int _Options = 0]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-base.hxx:375:30:   required from ‘void pinocchio::LieGroupBase<Derived>::difference(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) const [with ConfigL_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; ConfigR_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; Tangent_t = Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 1, 1, false>; Derived = pinocchio::SpecialOrthogonalOperationTpl<2, float, 0>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-algo.hxx:374:21:   required from ‘static void pinocchio::DifferenceStepAlgo<Visitor, JointModel>::run(const pinocchio::JointModelBase<JointModel>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; TangentVectorOut = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; Visitor = pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >; JointModel = pinocchio::JointModelRevoluteUnboundedTpl<float, 0, 0>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-algo.hxx:359:5:   required from ‘static void pinocchio::DifferenceStep<LieGroup_t, ConfigVectorIn1, ConfigVectorIn2, TangentVectorOut>::algo(const pinocchio::JointModelBase<OtherDerived>&, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 0>::type, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 1>::type, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 2>::type) [with JointModel = pinocchio::JointModelRevoluteUnboundedTpl<float, 0, 0>; LieGroup_t = pinocchio::LieGroupMap; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; TangentVectorOut = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 0>::type = const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 1>::type = const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 2>::type = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/visitor/joint-unary-visitor.hpp:183:28:   required from ‘ReturnType pinocchio::fusion::JointUnaryVisitorBase<JointVisitorDerived, ReturnType>::InternalVisitorModel<ArgType, Dummy>::operator()(const pinocchio::JointModelBase<JointModelDerived>&) const [with JointModelDerived = pinocchio::JointModelRevoluteUnboundedTpl<float, 0, 0>; ArgType = boost::fusion::vector<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&>; Dummy = void; JointVisitorDerived = pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >; ReturnType = void]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/boost/variant/variant.hpp:1028:24:   [ skipping 7 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = pinocchio::fusion::JointUnaryVisitorBase<pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >, void>::InternalVisitorModel<boost::fusion::vector<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&>, void>; Visitable = const pinocchio::JointModelTpl<float, 0, pinocchio::JointCollectionDefaultTpl>&; typename Visitor::result_type = void]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/visitor/joint-unary-visitor.hpp:69:36:   required from ‘static ReturnType pinocchio::fusion::JointUnaryVisitorBase<JointVisitorDerived, ReturnType>::run(const pinocchio::JointModelTpl<Scalar, Options, JointCollectionTpl>&, ArgsTmp) [with Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ArgsTmp = boost::fusion::vector<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&>; JointVisitorDerived = pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >; ReturnType = void]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/algorithm/joint-configuration.hxx:83:16:   required from ‘void pinocchio::difference(const pinocchio::ModelTpl<Scalar, Options, JointCollectionTpl>&, const Eigen::MatrixBase<MatRet>&, const Eigen::MatrixBase<TangentVectorType>&, const Eigen::MatrixBase<ReturnType>&) [with LieGroup_t = pinocchio::LieGroupMap; Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ReturnType = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/algorithm/joint-configuration.hpp:147:105:   required from ‘void pinocchio::difference(const pinocchio::ModelTpl<Scalar, Options, JointCollectionTpl>&, const Eigen::MatrixBase<Matrix3Like>&, const Eigen::MatrixBase<MatRet>&, const Eigen::MatrixBase<TangentVectorType>&) [with Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ReturnType = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/crocoddyl/multibody/states/multibody.hxx:83:24:   required from ‘void crocoddyl::StateMultibodyTpl<Scalar>::diff(const Eigen::Ref<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>&, const Eigen::Ref<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>&, Eigen::Ref<typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>) const [with _Scalar = float; typename Eigen::internal::conditional<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs = Eigen::Matrix<float, -1, 1>; typename Eigen::internal::conditional<typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/crocoddyl/multibody/states/multibody.hxx:64:6:   required from here
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/special-orthogonal.hpp:74:45: error: no matching function for call to ‘if_then_else(pinocchio::internal::ComparisonOperators, const Scalar&, double, float, pinocchio::internal::if_then_else_impl<float, float, float, float>::ReturnType)’
   74 |                                 if_then_else(internal::GT, tr, Scalar(2) - 1e-2,
      |                                 ~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   75 |                                              asin((R(1,0) - R(0,1)) / Scalar(2)), // then
      |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   76 |                                              if_then_else(internal::GE, R (1, 0), Scalar(0),
      |                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   77 |                                                           acos(tr/Scalar(2)), // then
      |                                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   78 |                                                           -acos(tr/Scalar(2))
      |                                                           ~~~~~~~~~~~~~~~~~~~
   79 |                                                           )
      |                                                           ~
   80 |                                              )
      |                                              ~
In file included from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/math/quaternion.hpp:16,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/spatial/se3-tpl.hpp:12,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/spatial/se3.hpp:44,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/model.hpp:10,
                 from /home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/parsers/urdf.hpp:9,
                 from test_croc.cpp:1:
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/utils/static-if.hpp:77:5: note: candidate: ‘template<class LhsType, class RhsType, class ThenType, class ElseType> typename pinocchio::internal::if_then_else_impl<LhsType, RhsType, ThenType, ElseType>::ReturnType pinocchio::internal::if_then_else(pinocchio::internal::ComparisonOperators, const LhsType&, const RhsType&, const ThenType&, const ElseType&)’
   77 |     if_then_else(const ComparisonOperators op,
      |     ^~~~~~~~~~~~
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/utils/static-if.hpp:77:5: note:   template argument deduction/substitution failed:
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/utils/static-if.hpp: In substitution of ‘template<class LhsType, class RhsType, class ThenType, class ElseType> typename pinocchio::internal::if_then_else_impl<LhsType, RhsType, ThenType, ElseType>::ReturnType pinocchio::internal::if_then_else(pinocchio::internal::ComparisonOperators, const LhsType&, const RhsType&, const ThenType&, const ElseType&) [with LhsType = float; RhsType = double; ThenType = float; ElseType = float]’:
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/special-orthogonal.hpp:74:45:   required from ‘static typename Matrix2Like::Scalar pinocchio::SpecialOrthogonalOperationTpl<2, _Scalar, _Options>::log(const Eigen::MatrixBase<OtherDerived>&) [with Matrix2Like = Eigen::Matrix<float, 2, 2>; _Scalar = float; int _Options = 0; typename Matrix2Like::Scalar = float]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/special-orthogonal.hpp:142:55:   required from ‘static void pinocchio::SpecialOrthogonalOperationTpl<2, _Scalar, _Options>::difference_impl(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with ConfigL_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; ConfigR_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; Tangent_t = Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 1, 1, false>; _Scalar = float; int _Options = 0]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-base.hxx:375:30:   required from ‘void pinocchio::LieGroupBase<Derived>::difference(const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) const [with ConfigL_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; ConfigR_t = Eigen::Block<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 2, 1, false>; Tangent_t = Eigen::Block<Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, 1, 1, false>; Derived = pinocchio::SpecialOrthogonalOperationTpl<2, float, 0>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-algo.hxx:374:21:   required from ‘static void pinocchio::DifferenceStepAlgo<Visitor, JointModel>::run(const pinocchio::JointModelBase<JointModel>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<OtherDerived>&, const Eigen::MatrixBase<ScaleDerived>&) [with ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; TangentVectorOut = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; Visitor = pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >; JointModel = pinocchio::JointModelRevoluteUnboundedTpl<float, 0, 0>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/liegroup/liegroup-algo.hxx:359:5:   required from ‘static void pinocchio::DifferenceStep<LieGroup_t, ConfigVectorIn1, ConfigVectorIn2, TangentVectorOut>::algo(const pinocchio::JointModelBase<OtherDerived>&, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 0>::type, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 1>::type, typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 2>::type) [with JointModel = pinocchio::JointModelRevoluteUnboundedTpl<float, 0, 0>; LieGroup_t = pinocchio::LieGroupMap; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; TangentVectorOut = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 0>::type = const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 1>::type = const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&; typename boost::fusion::result_of::at_c<boost::fusion::vector<const ConfigVectorIn&, const TangentVectorIn&, ConfigVectorOut&>, 2>::type = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/visitor/joint-unary-visitor.hpp:183:28:   [ skipping 8 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/boost/variant/detail/apply_visitor_unary.hpp:48:64:   required from ‘typename Visitor::result_type boost::apply_visitor(Visitor&, Visitable&&) [with Visitor = pinocchio::fusion::JointUnaryVisitorBase<pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >, void>::InternalVisitorModel<boost::fusion::vector<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&>, void>; Visitable = const pinocchio::JointModelTpl<float, 0, pinocchio::JointCollectionDefaultTpl>&; typename Visitor::result_type = void]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/multibody/visitor/joint-unary-visitor.hpp:69:36:   required from ‘static ReturnType pinocchio::fusion::JointUnaryVisitorBase<JointVisitorDerived, ReturnType>::run(const pinocchio::JointModelTpl<Scalar, Options, JointCollectionTpl>&, ArgsTmp) [with Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ArgsTmp = boost::fusion::vector<const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, const Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1, 0, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>&>; JointVisitorDerived = pinocchio::DifferenceStep<pinocchio::LieGroupMap, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>, Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false> >; ReturnType = void]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/algorithm/joint-configuration.hxx:83:16:   required from ‘void pinocchio::difference(const pinocchio::ModelTpl<Scalar, Options, JointCollectionTpl>&, const Eigen::MatrixBase<MatRet>&, const Eigen::MatrixBase<TangentVectorType>&, const Eigen::MatrixBase<ReturnType>&) [with LieGroup_t = pinocchio::LieGroupMap; Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ReturnType = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/algorithm/joint-configuration.hpp:147:105:   required from ‘void pinocchio::difference(const pinocchio::ModelTpl<Scalar, Options, JointCollectionTpl>&, const Eigen::MatrixBase<Matrix3Like>&, const Eigen::MatrixBase<MatRet>&, const Eigen::MatrixBase<TangentVectorType>&) [with Scalar = float; int Options = 0; JointCollectionTpl = pinocchio::JointCollectionDefaultTpl; ConfigVectorIn1 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ConfigVectorIn2 = Eigen::Block<const Eigen::Ref<const Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>; ReturnType = Eigen::Block<Eigen::Ref<Eigen::Matrix<float, -1, 1>, 0, Eigen::InnerStride<1> >, -1, 1, false>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/crocoddyl/multibody/states/multibody.hxx:83:24:   required from ‘void crocoddyl::StateMultibodyTpl<Scalar>::diff(const Eigen::Ref<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>&, const Eigen::Ref<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>&, Eigen::Ref<typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs>) const [with _Scalar = float; typename Eigen::internal::conditional<const typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>; typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs = Eigen::Matrix<float, -1, 1>; typename Eigen::internal::conditional<typename crocoddyl::MathBaseTpl<_Scalar>::VectorXs::IsVectorAtCompileTime, Eigen::InnerStride<1>, Eigen::OuterStride<> >::type = Eigen::InnerStride<1>]’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/crocoddyl/multibody/states/multibody.hxx:64:6:   required from here
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/utils/static-if.hpp:77:5: error: invalid use of incomplete type ‘struct pinocchio::internal::if_then_else_impl<float, double, float, float>’
/home/a2rlab/anaconda3/envs/crocoddyl/lib/pkgconfig/../../include/pinocchio/utils/static-if.hpp:18:12: note: declaration of ‘struct pinocchio::internal::if_then_else_impl<float, double, float, float>’
   18 |     struct if_then_else_impl;